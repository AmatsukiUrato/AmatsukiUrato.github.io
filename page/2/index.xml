<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ぎじゅつわふたー</title><link>https://tech-wafter.net/</link><description>Recent content on ぎじゅつわふたー</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Mon, 20 Jul 2020 02:40:12 +0900</lastBuildDate><atom:link href="https://tech-wafter.net/index.xml" rel="self" type="application/rss+xml"/><item><title>SpringBoot上でwebpack環境+ThymeLeafをしたい</title><link>https://tech-wafter.net/2020/wanna-introduce-webpack-thymeleaf-scss-on-springboot-pj/</link><pubDate>Sun, 31 May 2020 21:14:12 +0900</pubDate><guid>https://tech-wafter.net/2020/wanna-introduce-webpack-thymeleaf-scss-on-springboot-pj/</guid><description>はじめに テンプレートエンジンと webpack を mix してうまく作れないか奮闘した記録です。 webpack(scss/eslint/prettier/html-webpack-plugin)などを動作させた後に ThymeLeaf で読み込めるようにできないかを考えました。 結論から言うと、一部うまくいきませんでした。 やりたかったこと webpack にて、src 以下のファイル群をコンパイルする。 コンパイルした後に ThymeLeaf を噛ませたいので、html ファイルに関しては templates に配置する public には html 以外のファイルを出力する templates/以下にある html ファイルには、自</description></item><item><title>zsh上でhistoryコマンドを打つと直近15件しかでてこない</title><link>https://tech-wafter.net/2020/zsh-history-cmd-cant-show-all-history-when-using-history/</link><pubDate>Sat, 30 May 2020 18:46:10 +0900</pubDate><guid>https://tech-wafter.net/2020/zsh-history-cmd-cant-show-all-history-when-using-history/</guid><description>概要 bash を使ってたときは、historyで全履歴が表示されたのに対して、 zsh ではhistoryを叩いても、直近 15 件しか表示されなくて困ってました。 原因 bash のhistoryと zsh のhistoryコマンドでは仕様が違う。 両方とも fc コマンドの alias として用意されているみたいですけど、alias のはられ方が違うのかも。詳細は調べていないので、知っている方いたら教えてください。 デフォを全件表示にする 1 alias history=&amp;#39;history 1&amp;#39; history 1で 1~現在までの履歴が表示されるので、historyに alias を貼る。 まぁ何が困ってたかって、grep 検索できない</description></item><item><title>OSX上にインストールしたIntelliJのconfigファイル保存場所をメモする</title><link>https://tech-wafter.net/2020/take-note-intellij-config-path-on-osx/</link><pubDate>Thu, 28 May 2020 02:43:26 +0900</pubDate><guid>https://tech-wafter.net/2020/take-note-intellij-config-path-on-osx/</guid><description>メモ。以下にあります。 windows と違って散らばってるのが少し面倒くさいですね。 また、CommunityEdition と UltimateEdition では微妙に path が違います。 とはそれぞれ、リリース年とリリース月替入ります。 UltimateEdition Path target File path config ~/Library/Preferences/IntelliJIdea&amp;lt;YYYY&amp;gt;.&amp;lt;M&amp;gt; System ~/Library/Caches/IntelliJIdea&amp;lt;YYYY&amp;gt;.&amp;lt;M&amp;gt; Plugins ~/Library/Application Support/IntelliJIdea&amp;lt;YYYY&amp;gt;.&amp;lt;M&amp;gt; Logs ~/Library/Logs/IntelliJIdea&amp;lt;YYYY&amp;gt;.&amp;lt;M&amp;gt; Logs に関して、IntelliJ IDEA 9 以前のものは System location に保存されているみたいです。 CommunityEdition Path target File path config ? System ~/Library/Caches/JetBrains/IdeaIC&amp;lt;YYYY&amp;gt;.&amp;lt;M&amp;gt; Plugins ~/Library/Application Support/JetBrains/IdeaIC&amp;lt;YYYY&amp;gt;.&amp;lt;M&amp;gt; Logs ~/Library/Logs/JetBrains/IdeaIC&amp;lt;YYYY&amp;gt;.&amp;lt;M&amp;gt; CE では JetBrains というフォルダを間に噛ますみたいですね。 config だけは表示されませんでした。こっちは Plugin と違って import/export があるので、良いっちゃ良いのですが、少し気持ち悪いですね。 参考 macos - Where is IntelliJ IDEA config stored in OSX? - Stack</description></item><item><title>伝わる!...かもしれない。エンジニアの文章力向上を読んだ</title><link>https://tech-wafter.net/2020/read-maybe-transmitted-sentence-improve-your-engineer-writing-skills/</link><pubDate>Wed, 27 May 2020 19:17:33 +0900</pubDate><guid>https://tech-wafter.net/2020/read-maybe-transmitted-sentence-improve-your-engineer-writing-skills/</guid><description>はじめに 一昨日辺りに、エンジニアのための日本語文章テクニックを読んだので、引き続き日本語文章系の本を読んだ感じです。 文章での注意点 誤字・脱字をしない 表記を統一する カタカナ語の伸ばし棒有無 カタカナ or 英語 何も考えずに漢字を使うのはやめる 適切に接続語を使う 翻訳調の書き方をしない 言い換えられないかを検討する 抽象的な書き方をやめる できるだけ具体的に書く 抽象的に書いたほうがわかりやすくなる場合もあるので、相手に合わせるのがベスト 数字を入れる 主語と述語を近づける 文章は長くしすぎない 二重否定は使わない 物事を伝え</description></item><item><title>GradleのArtifactとはなんぞや</title><link>https://tech-wafter.net/2020/what-is-artifact/</link><pubDate>Wed, 27 May 2020 12:15:43 +0900</pubDate><guid>https://tech-wafter.net/2020/what-is-artifact/</guid><description>毎回忘れるのでメモ。 Artifact とはなんぞや 該当プロジェクトが、一意に参照できるようにするためのもの。 プロジェクトの名前やライブラリの名前になることが多いと思う。 java のライブラリ管理はドメイン名と Artifact で行われており、それぞれをつなげたのものファイル名にする。 そのため、example.com というドメインを所持している会社の foo-library というライブラリを配布する場合、 1 2 3 com/ └── example └── foo-library といった形になる。 また、Gradle の設定ファイルであるbuild.gradleには、ドメイン部分の 1 group = &amp;#39;com.example&amp;#39; が記載される。 じゃあ Name っ</description></item><item><title>エンジニアのための日本語文章テクニックを読んだ</title><link>https://tech-wafter.net/2020/read-japanese-sentence-technique-for-engineer/</link><pubDate>Mon, 25 May 2020 12:23:16 +0900</pubDate><guid>https://tech-wafter.net/2020/read-japanese-sentence-technique-for-engineer/</guid><description>はじめに 結構前に買った本を読んだので、メモおよび感想を書きました。 お昼の一時間にぱぱっと読めるぐらいの量なので、気軽に読めました 👍 読みやすい文章とは 読みやすい文章 = 流し読みできる文章 読みやすい文章 ≠ 魅力的な文章 流し読みできる文章のメリット 読みやすさ 読んでもらいやすさ 流し読みで読める文章じゃないと、まともに読んでもらえない。 読みやすい文章にするには 読点を使う 読点を上手に使うことが重要になる。 読点は、 文章の強弱や区切りを明確化するため に存在している。 以下の箇所に読点を入れると良くなる。 要因と結果の間</description></item></channel></rss>