<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ぎじゅつわふたー</title><link>https://tech-wafter.net/</link><description>Recent content on ぎじゅつわふたー</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Wed, 16 Oct 2019 23:36:19 +0900</lastBuildDate><atom:link href="https://tech-wafter.net/index.xml" rel="self" type="application/rss+xml"/><item><title>Three.jsを学習する【第一回】</title><link>https://tech-wafter.net/2019/study-three.js-1/</link><pubDate>Sat, 09 Nov 2019 17:35:48 +0900</pubDate><guid>https://tech-wafter.net/2019/study-three.js-1/</guid><description>前回のブラウザで AR を使ってみたを触って、オブジェクトをThree.jsで作りたいと思いました。 Three.jsを学習するにあたって、良さげなサイトがあったので、こちらを参考に学習していこうと思います。忘備録です。 function をアロー関数に変える なんでアロー関数にしたいのかは、関数宣言 vs 関数式 | ES2015+を参照。 1 2 3 4 5 window.addEventListener(&amp;#39;load&amp;#39;, init); function init() { // 処理 } から 1 2 3 4 const init = () =&amp;gt; { // 処理 }; window.addEventListener(&amp;#39;load&amp;#39;, init); に変える。 Three.js でオブジェクトを表示させるには レンダラーを作成する シーンを作成する 意味 レンダラー 描画するシステムのこと レンダリングエン</description></item><item><title>git-secretsのawsトークン保護を検証してみた</title><link>https://tech-wafter.net/2019/tried-using-git-secrets/</link><pubDate>Thu, 07 Nov 2019 22:16:44 +0900</pubDate><guid>https://tech-wafter.net/2019/tried-using-git-secrets/</guid><description>はじめに 昨日、日課のはてなブックマークを漁っていたところ、Developers.IO さんの AWS でのセキュリティ対策全部盛り[初級から中級まで]というスライドを見つけました。 こちらのスライドの中で、git-secretsという AWS などの token 情報をgitに乗せてしまうのを防ぐソフトが紹介されており、以下のパターンの場合に正しく検知できるのかが気になったため検証しました。 既に token がコミットされていた場合 どのように検知するのか？ 既に token が混入してるコミットをプッシュした際には検知できるのか 既に token がコミットされ</description></item><item><title>マルチAZとクロスリージョンレプリケーションの違い</title><link>https://tech-wafter.net/2019/difference-between-multiaz-and-cross-region/</link><pubDate>Wed, 06 Nov 2019 22:21:12 +0900</pubDate><guid>https://tech-wafter.net/2019/difference-between-multiaz-and-cross-region/</guid><description>つい最近、表題について調べることが合ったため、忘備録として記載しておきます。 違いについて 結論から書くと、 クロスリージョンレプリカはサブがリードレプリカなのに対して、マルチ AZ ではスタンバイレプリカになっている クロスリージョンレプリカは複数リージョンを利用するのに対し、マルチ AZ では同一リージョンを利用する が大きな違いかなと思います。 MultiAZ 構成について RDS をマルチ AZ 構成で起動すると Master とは別の AZ に Slave の RDS が立ち上げられ、同期レプリケーションが行われます。俗に言う Master-Slave 構成。 Master がサーバダウンすれば、Slave くんが変</description></item><item><title>ブラウザでARを使ってみた</title><link>https://tech-wafter.net/2019/try-to-create-ar-page/</link><pubDate>Mon, 04 Nov 2019 13:47:45 +0900</pubDate><guid>https://tech-wafter.net/2019/try-to-create-ar-page/</guid><description>はじめに ふと、名刺に AR マーカーが記載されていて、 川島教授の顔みたいな（脳トレ）のが出てきたら、とてもおもしろいなと思いついて触ってみました。 もっと脳を鍛える大人の DS トレーニング ™ （余談ですが、脳トレのSwitch 版がでるみたいです） AR の実現方法 軽く検索したところ、Unity で実現する方法と Web 技術で実現する方法が見つかりました。 ネイティブで実現する方法もあると思いますが、今回はこの 2 つを見ていきます。 Unity どうやら、Vuforiaという外部ツールと連携して使うのが主流みたいです。 iOS だとARkit、An</description></item><item><title>Marpが前よりも使いやすくなっていたので、触ってみた</title><link>https://tech-wafter.net/2019/updated-marp/</link><pubDate>Thu, 31 Oct 2019 22:41:35 +0900</pubDate><guid>https://tech-wafter.net/2019/updated-marp/</guid><description>はじめに ずっと前から、スライドを何とか Markdown でかけないかをずっと考えていまして、昔は Marp を使っていました。 しかし、かゆいところに手が届かないのが欠点で、ここ最近はrevealjsというライブラリの VSCode 拡張機能版cscode-revealを利用しておりました。 こちらもめちゃくちゃ良くて、html でイカしたスライドを作りたいなら、めちゃくちゃありな選択肢だと思います。 ずっとcscode-revealを利用していたのですが、こちらは pdf 化を行うときがうまく行かず、pptxやpdfの資料として作成するには少し辛い</description></item><item><title>Amazon Game Tech Night Osakaに行ってみた</title><link>https://tech-wafter.net/2019/game-tech-night-cloud2.0/</link><pubDate>Thu, 31 Oct 2019 02:19:44 +0900</pubDate><guid>https://tech-wafter.net/2019/game-tech-night-cloud2.0/</guid><description>畑違いの業種なのですが、 AWS Pop-Up Loft Osaka が行われるとのことだったので、Game Tech Night へ参加しました！ 会場は最初から最後まで、飲食ありのラフな感じで開催されておりました 😊 登壇者は全員おもしろい発表をされていましたが、とくに面白かった Cloud2.0 についての所感を記載しております。 もうそこまで迫っている！ Cloud2.0 時代の開発 info 登壇者 丹羽さん/GS2 の CEO HP https://gs2.io/ フルマネージドサービスを使おう 処理をフルマネージドにすることで、復旧対策や管理まで AWS が担保してくれる あえてロックインされにいく コントローラブルなものを利用する=問題が発生したら</description></item></channel></rss>