<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ぎじゅつわふたー</title><link>https://tech-wafter.net/</link><description>Recent content on ぎじゅつわふたー</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Fri, 19 Jun 2020 03:53:12 +0900</lastBuildDate><atom:link href="https://tech-wafter.net/index.xml" rel="self" type="application/rss+xml"/><item><title>Bootstrap5のα版がリリースされました</title><link>https://tech-wafter.net/2020/bootstrap5-alpha-released/</link><pubDate>Fri, 19 Jun 2020 03:53:12 +0900</pubDate><guid>https://tech-wafter.net/2020/bootstrap5-alpha-released/</guid><description>概要 2020-06-16 に Bootstrap5 の α 版が公開されました!! Bootstrap 5 alpha! | Bootstrap Blog 公式のブログを読むと、以下の対応が挙げられていました。 jQuery を捨てたよ IE サポートを捨てたよ 公式ドキュメントを改善したよ Hugo を使っているよ ロゴを新しくしたよ form 系の要素を見直したよ Utilities を強化したよ html と css のみでボタンのトグルを実装したよ CSS のカスタムプロパティを使い始めたよ カラーパレット拡張したよ 近日公開予定のものは割愛しております。 Bootstrap のために jQuery 入れてたりしてたので、脱 jQuery は嬉しいですね。 容量を測ってみる 公式で CDN 提供されているものから取得しました。 少なくとも jQuery の分だ</description></item><item><title>SpringSecurityのconfigureにて、静的ファイルが対象外にならない</title><link>https://tech-wafter.net/2020/solved-problem-couldnt-ignore-static-resources-in-spring-security/</link><pubDate>Mon, 01 Jun 2020 01:55:26 +0900</pubDate><guid>https://tech-wafter.net/2020/solved-problem-couldnt-ignore-static-resources-in-spring-security/</guid><description>概要 SpringSecurityを導入しているSpringBootのプロジェクトにて、静的ファイルを対象外にするための設定が反映されてなかったです。 原因 静的リソースフォルダとして扱われるフォルダ内が、ルートとして扱われるみたいです。 1 2 3 4 src/main/resources/public └── js/ └── css/ └── file1/ 上記のようなフォルダ構成の場合で、jsとcssをopenにしたい場合は下記のように設定します。 1 2 3 4 @Override public void configure(WebSecurity web) throws Exception { web.ignoring().antMatchers(&amp;#34;/js/**&amp;#34;, &amp;#34;/css/**&amp;#34;); } publicで指定しても、SpringSecurityの保護対象外にならないです。 1 2 3 4 5 @Override public void configure(WebSecurity web) throws Exception { //</description></item><item><title>yarn実行時にwarning: No license fieldが出ていたのでlicenseをセットした</title><link>https://tech-wafter.net/2020/set-license-on-package-json/</link><pubDate>Sun, 31 May 2020 22:10:47 +0900</pubDate><guid>https://tech-wafter.net/2020/set-license-on-package-json/</guid><description>yarn を走らせると、license を正しくセットしていない場合、 1 warning package.json: No license field と表示されます。 エラー名の通り、package.json 内に license がセットされていないためです。 license をセットしましょう。 1 2 3 { &amp;#34;license&amp;#34;: &amp;#34;SPDXで指定されているID&amp;#34; } SPDX の ID なんて知らないですよね。 SPDX License List | Software Package Data Exchange (SPDX)に Identifier という項目で記載されているので、それを上記 json の license で指定すれば OK です。 いや、俺は license 指定なんてしたくないんやが &amp;ldquo;UNLICENSED&amp;quot;を入れれば良いみたい。 SPDX とはなんぞや？ ラ</description></item><item><title>SpringBoot上でwebpack環境+ThymeLeafをしたい</title><link>https://tech-wafter.net/2020/wanna-introduce-webpack-thymeleaf-scss-on-springboot-pj/</link><pubDate>Sun, 31 May 2020 21:14:12 +0900</pubDate><guid>https://tech-wafter.net/2020/wanna-introduce-webpack-thymeleaf-scss-on-springboot-pj/</guid><description>はじめに テンプレートエンジンと webpack を mix してうまく作れないか奮闘した記録です。 webpack(scss/eslint/prettier/html-webpack-plugin)などを動作させた後に ThymeLeaf で読み込めるようにできないかを考えました。 結論から言うと、一部うまくいきませんでした。 やりたかったこと webpack にて、src 以下のファイル群をコンパイルする。 コンパイルした後に ThymeLeaf を噛ませたいので、html ファイルに関しては templates に配置する public には html 以外のファイルを出力する templates/以下にある html ファイルには、自</description></item><item><title>zsh上でhistoryコマンドを打つと直近15件しかでてこない</title><link>https://tech-wafter.net/2020/zsh-history-cmd-cant-show-all-history-when-using-history/</link><pubDate>Sat, 30 May 2020 18:46:10 +0900</pubDate><guid>https://tech-wafter.net/2020/zsh-history-cmd-cant-show-all-history-when-using-history/</guid><description>概要 bash を使ってたときは、historyで全履歴が表示されたのに対して、 zsh ではhistoryを叩いても、直近 15 件しか表示されなくて困ってました。 原因 bash のhistoryと zsh のhistoryコマンドでは仕様が違う。 両方とも fc コマンドの alias として用意されているみたいですけど、alias のはられ方が違うのかも。詳細は調べていないので、知っている方いたら教えてください。 デフォを全件表示にする 1 alias history=&amp;#39;history 1&amp;#39; history 1で 1~現在までの履歴が表示されるので、historyに alias を貼る。 まぁ何が困ってたかって、grep 検索できない</description></item><item><title>OSX上にインストールしたIntelliJのconfigファイル保存場所をメモする</title><link>https://tech-wafter.net/2020/take-note-intellij-config-path-on-osx/</link><pubDate>Thu, 28 May 2020 02:43:26 +0900</pubDate><guid>https://tech-wafter.net/2020/take-note-intellij-config-path-on-osx/</guid><description>メモ。以下にあります。 windows と違って散らばってるのが少し面倒くさいですね。 また、CommunityEdition と UltimateEdition では微妙に path が違います。 とはそれぞれ、リリース年とリリース月替入ります。 UltimateEdition Path target File path config ~/Library/Preferences/IntelliJIdea&amp;lt;YYYY&amp;gt;.&amp;lt;M&amp;gt; System ~/Library/Caches/IntelliJIdea&amp;lt;YYYY&amp;gt;.&amp;lt;M&amp;gt; Plugins ~/Library/Application Support/IntelliJIdea&amp;lt;YYYY&amp;gt;.&amp;lt;M&amp;gt; Logs ~/Library/Logs/IntelliJIdea&amp;lt;YYYY&amp;gt;.&amp;lt;M&amp;gt; Logs に関して、IntelliJ IDEA 9 以前のものは System location に保存されているみたいです。 CommunityEdition Path target File path config ? System ~/Library/Caches/JetBrains/IdeaIC&amp;lt;YYYY&amp;gt;.&amp;lt;M&amp;gt; Plugins ~/Library/Application Support/JetBrains/IdeaIC&amp;lt;YYYY&amp;gt;.&amp;lt;M&amp;gt; Logs ~/Library/Logs/JetBrains/IdeaIC&amp;lt;YYYY&amp;gt;.&amp;lt;M&amp;gt; CE では JetBrains というフォルダを間に噛ますみたいですね。 config だけは表示されませんでした。こっちは Plugin と違って import/export があるので、良いっちゃ良いのですが、少し気持ち悪いですね。 参考 macos - Where is IntelliJ IDEA config stored in OSX? - Stack</description></item></channel></rss>