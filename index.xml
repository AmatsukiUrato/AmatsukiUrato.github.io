<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ぎじゅつわふたー</title><link>https://tech-wafter.net/</link><description>Recent content on ぎじゅつわふたー</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Wed, 27 May 2020 19:17:33 +0900</lastBuildDate><atom:link href="https://tech-wafter.net/index.xml" rel="self" type="application/rss+xml"/><item><title>伝わる!...かもしれない。エンジニアの文章力向上を読んだ</title><link>https://tech-wafter.net/2020/read-maybe-transmitted-sentence-improve-your-engineer-writing-skills/</link><pubDate>Wed, 27 May 2020 19:17:33 +0900</pubDate><guid>https://tech-wafter.net/2020/read-maybe-transmitted-sentence-improve-your-engineer-writing-skills/</guid><description>はじめに 一昨日辺りに、エンジニアのための日本語文章テクニックを読んだので、引き続き日本語文章系の本を読んだ感じです。 文章での注意点 誤字・脱字をしない 表記を統一する カタカナ語の伸ばし棒有無 カタカナor英語 何も考えずに漢字を使うのはやめる 適切に接続語を使う 翻訳調の書き方をしない 言い換えられないかを検討する 抽象的な書き方をやめる できるだけ具体的に書く 抽象的に書いたほうがわかりやすくなる場合もあるので、相手に合わせるのがベスト 数字を入れる 主語と述語を近づける 文章は長くしすぎない 二重否定は使わない 物事を伝</description></item><item><title>GradleのArtifactとはなんぞや</title><link>https://tech-wafter.net/2020/what-is-artifact/</link><pubDate>Wed, 27 May 2020 12:15:43 +0900</pubDate><guid>https://tech-wafter.net/2020/what-is-artifact/</guid><description>毎回忘れるのでメモ。 Artifactとはなんぞや 該当プロジェクトが、一意に参照できるようにするためのもの。 プロジェクトの名前やライブラリの名前になることが多いと思う。 javaのライブラリ管理はドメイン名と Artifact で行われており、それぞれをつなげたのものファイル名にする。 そのため、example.com というドメインを所持している会社の foo-library というライブラリを配布する場合、 1 2 3 com/ └── example └── foo-library といった形になる。 また、Gradleの設定ファイルであるbuild.gradleには、ドメイン部分の 1 group = &amp;#39;com.example&amp;#39; が記</description></item><item><title>エンジニアのための日本語文章テクニックを読んだ</title><link>https://tech-wafter.net/2020/read-japanese-sentence-technique-for-engineer/</link><pubDate>Mon, 25 May 2020 12:23:16 +0900</pubDate><guid>https://tech-wafter.net/2020/read-japanese-sentence-technique-for-engineer/</guid><description>はじめに 結構前に買った本を読んだので、メモおよび感想を書きました。 お昼の一時間にぱぱっと読めるぐらいの量なので、気軽に読めました👍 読みやすい文章とは 読みやすい文章 = 流し読みできる文章 読みやすい文章 ≠ 魅力的な文章 流し読みできる文章のメリット 読みやすさ 読んでもらいやすさ 流し読みで読める文章じゃないと、まともに読んでもらえない。 読みやすい文章にするには 読点を使う 読点を上手に使うことが重要になる。 読点は、 文章の強弱や区切りを明確化するため に存在している。 以下の箇所に読点を入れると良くなる。 要因と結果の間</description></item><item><title>wingetのプレビュー版が公開されたので、他のパッケージ管理ソフトとかと一緒に使ってみる</title><link>https://tech-wafter.net/2020/use-windows-package-managers/</link><pubDate>Wed, 20 May 2020 19:59:35 +0900</pubDate><guid>https://tech-wafter.net/2020/use-windows-package-managers/</guid><description>はじめに 2020-5-13 に Microsoft より、 winget のプレビュー版が公開されたので、 これを気に windows で使えるパッケージソフトをひととおり試してみました。 今回は VS Code のインストールを行っていきます。 試したパッケージマネージャは winget chocolatey scoop AppGet Npackd です。 winget を使う GitHub のページから Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.appxbundle をダウンロードする 起動してインストール powershell を起動して vscode をインストールをする 1 winget install vscode これで vscode がインストールされます。 結構楽にインストールできましたが、アンインストールは今のところないっぽいです。 因みに、パッケージ名が複数あった場合は同じ名前が複数個あると言われるので、Id を入</description></item><item><title>英字配列のHHKBを一ヶ月使ってみて</title><link>https://tech-wafter.net/2020/use-us-hhkb-one-month/</link><pubDate>Fri, 15 May 2020 21:54:00 +0900</pubDate><guid>https://tech-wafter.net/2020/use-us-hhkb-one-month/</guid><description>はじめに ⌨️ 1 か月前ぐらいに US キーボードの HHKB を購入したので使用感とかを書きます。 前までは REALFORCE を使っていたのですが、持ち運びが大変だったため切り替えました。 HHKB を使う前が REALFORCE だったので REALFORCE との比較を軸に書いてます。 → TL;DR 持ち運びするなら HHKB、固定なら REALFORCE プログラミングするなら US 配列がオススメ スペック比較 📊 購入してはいませんが、比較として US 配列のテンキーレスである R2TLS-US3-BK も掲載しております。 PD-KB800WS (HHKB Hybrid) R2SA-JP3-BK (REALFORCE テンキーあり) R2TLS-US3-BK (REALFORCE テンキーレス) サイズ 294mm × 120mm × 40mm 455mm x 142mm x 30mm 369mm x 142mm x 30mm 質量 540g(電池含まず) 1400g 1100g キーストローク 3.8mm</description></item><item><title>情報収集によく利用するページをまとめた</title><link>https://tech-wafter.net/2020/often-use-to-collect-information/</link><pubDate>Sat, 02 May 2020 19:42:09 +0900</pubDate><guid>https://tech-wafter.net/2020/often-use-to-collect-information/</guid><description>はじめに 自分がよく見る順で、情報収集に使っているサイトを羅列してみました。 トレンドを知りたい 自分の担当範囲外の技術情報を知りたい 自分の技術領域の知識を増やしたい という方にはオススメです。 他にもあるよ〜という方がいれば、共有してくれると嬉しいです。 Qiita Qiita ここ最近国内でもっとも有名な技術情報の共有サービス。 国内の類似サービスとしては、Qrunch（クランチ）やCrieitなどもある。 良いところ 国内のサイトなので、日本語での情報収集がしやすい 国内の技術トレンドをつかみやすい 記事に対してプルリクを送信でき</description></item></channel></rss>