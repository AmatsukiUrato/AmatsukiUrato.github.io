<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>css on ぎじゅつわふたー</title><link>https://tech-wafter.net/tags/css/</link><description>Recent content in css on ぎじゅつわふたー</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Sat, 05 Sep 2020 22:45:42 +0900</lastBuildDate><atom:link href="https://tech-wafter.net/tags/css/index.xml" rel="self" type="application/rss+xml"/><item><title>Stylusを使ってChatWorkのデザインを変更した</title><link>https://tech-wafter.net/2020/edit-chatwork-design-by-stylus/</link><pubDate>Sat, 05 Sep 2020 22:45:42 +0900</pubDate><guid>https://tech-wafter.net/2020/edit-chatwork-design-by-stylus/</guid><description>はじめに 会社のチャットツールで ChatWork を利用していますが、使いづらい点が数点あるので、 ブラウザの拡張機能である Stylus を使って見た目をいじる記事です。 Stylus と Stylish 同じ用途の拡張機能として、Stylishがありますが、こちらは 2018 年頃に一度ユーザーのデータ収集を秘密裏に行っていました。 現在は Chrome ストアに再登場していますが、過去の事例を考えるとあまり使用したくはないです。 Firefox の人気アドオン「Stylish」はユーザーのインターネット履歴をこっそり収集していた - GIGAZINE Firefox と Chrome の Stylish がストアから公開停止になった件。対処など。 – らくログ</description></item><item><title>Bootstrap5のα版がリリースされました</title><link>https://tech-wafter.net/2020/bootstrap5-alpha-released/</link><pubDate>Fri, 19 Jun 2020 03:53:12 +0900</pubDate><guid>https://tech-wafter.net/2020/bootstrap5-alpha-released/</guid><description>概要 2020-06-16 に Bootstrap5 の α 版が公開されました!! Bootstrap 5 alpha! | Bootstrap Blog 公式のブログを読むと、以下の対応が挙げられていました。 jQuery を捨てたよ IE サポートを捨てたよ 公式ドキュメントを改善したよ Hugo を使っているよ ロゴを新しくしたよ form 系の要素を見直したよ Utilities を強化したよ html と css のみでボタンのトグルを実装したよ CSS のカスタムプロパティを使い始めたよ カラーパレット拡張したよ 近日公開予定のものは割愛しております。 Bootstrap のために jQuery 入れてたりしてたので、脱 jQuery は嬉しいですね。 容量を測ってみる 公式で CDN 提供されているものから取得しました。 少なくとも jQuery の分だ</description></item><item><title>Material-uiのmakestyleにて、複数のクラスを動的に指定する方法</title><link>https://tech-wafter.net/2019/how-to-select-multipulclass-material-ui/</link><pubDate>Mon, 14 Oct 2019 15:28:36 +0900</pubDate><guid>https://tech-wafter.net/2019/how-to-select-multipulclass-material-ui/</guid><description>TL;DR class データを string 配列として持つ 配列.join(' ')を該当のclassName={}の中に記述する 概要 最近、React についての勉強を行っていたところ、classの指定に手間取ってしまったのでメモ。 方法としては、探したところ、以下 2 つがあるみたい。 class 名の配列を作成して、最後に join で配列の間に``を入れて出力 classNameの中で、２つの class 名を呼び出す。 汎用性があるのは方法 1 のほうだと思われます。 面倒くさいのでソースベタ貼りしてます。 BoxはMaterial-uiの Util-component です。 最後に各クラスを join でくっつ</description></item></channel></rss>