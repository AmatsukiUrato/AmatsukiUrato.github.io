<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on ぎじゅつわふたー</title><link>https://tech-wafter.net/post/</link><description>Recent content in Posts on ぎじゅつわふたー</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Thu, 02 Apr 2020 02:47:24 +0900</lastBuildDate><atom:link href="https://tech-wafter.net/post/index.xml" rel="self" type="application/rss+xml"/><item><title>github-actions上でbuildした際、lastmodの更新がすべての記事に適用される問題を解決した</title><link>https://tech-wafter.net/2020/solved-issue-with-github-actions-lastmod-updates-being-applied-to-all-the-articles/</link><pubDate>Thu, 02 Apr 2020 02:47:24 +0900</pubDate><guid>https://tech-wafter.net/2020/solved-issue-with-github-actions-lastmod-updates-being-applied-to-all-the-articles/</guid><description>はじめに hugoのジェネレートをGitHub-actionsを使って、pushするだけでデプロイできるようにしたのですが、全記事の最終更新日が更新されていたため原因調査をおこないました。 TL;DR gitのcloneを行う際に最新コミットしか取得していなかった actions/checkoutを利用する場合は以下の方法でfetchさせ、全履歴を取得する 1 2 3 4 - uses:actions/checkout@v2- name:Checkoutrun:| git fetch --prune --unshallow 試したこと GitHub-actions上とlocalの比較 icon 結果 ✅ 更新対象記事のみlastmodが更新されていた ❎ すべての記事に対して更</description></item><item><title>DevToolsにあるSourceタブ内で閉じてしまったconsoleを再度開く（Chrome）</title><link>https://tech-wafter.net/2020/reopen-devtools-console-on-source-tab/</link><pubDate>Tue, 31 Mar 2020 16:47:29 +0900</pubDate><guid>https://tech-wafter.net/2020/reopen-devtools-console-on-source-tab/</guid><description>Sourcesタブを開いた状態でEscを押す。 右上の「︙」をクリックして、「(Show|Hide) console drawer」をクリックする。 これで表示/非表示ができる。ぱっと検索したときにすぐ検索で出てこなかったのでメモ。 地味にwindowがでかいから、「x」でよく消してしまうんだよね。</description></item><item><title>不要ソースコードをコメントアウトするなら、削除して履歴を残して😭</title><link>https://tech-wafter.net/2020/please-delete-unnecessary-comment-out-and-use-git-commit/</link><pubDate>Tue, 31 Mar 2020 02:47:08 +0900</pubDate><guid>https://tech-wafter.net/2020/please-delete-unnecessary-comment-out-and-use-git-commit/</guid><description>信じられないだろうが、バージョン管理システムへの登録や更新も「非効率的」とか「無駄な工数」とか抜かすSEもプログラマも多い。 &amp;mdash; Yuichi Onodera (@mokemoke6502) March 25, 2020 に対して、 gitは使ってるけどコメントが ・画面の修正をした ・バグを直した ・一旦コミット とかの意味がほぼ無いコメントで埋もれてるgitは見かける https://t.co/9A6NV7nwoA &amp;mdash; matsuaki (@matsu4ki) March 26, 2020 と引用リツイートしたのですが、もう少し自分で整理しておきたいと思い記事にしました。 はじめに gitでソースコード管理をしている際、仕様変更などで特定の関数自体が不要になる場合があります。 その時、対応しているエ</description></item><item><title>VSCode上でIntelliJライクなgitのannotate diffができるらしい</title><link>https://tech-wafter.net/2020/try-to-hard-to-display-intellij-like-annotate-diff/</link><pubDate>Tue, 24 Mar 2020 22:42:19 +0900</pubDate><guid>https://tech-wafter.net/2020/try-to-hard-to-display-intellij-like-annotate-diff/</guid><description>はじめに IntelliJにはGitの履歴確認方法の1つとして、Annotate機能が用意されています。 これがめちゃクソ便利なので、なんとかしてVS Code内でも再現できないかと模索した話になります。 Git LensはVS Code内の良い拡張機能として紹介されていることが多いけど、Git Lensの機能の1つであるannotation diffについてはあまり紹介されていないように思えるので紹介してみた。 TL;DR プラグインのGit Lensを入れて、以下の設定に変更すればそれっぽくなる SettingName Value Avatars チェックを外す Compact チェック</description></item><item><title>GitHub-ActionsでカスタムドメインのGitHub-Pagesをデプロイすると、カスタムドメインの登録が消える</title><link>https://tech-wafter.net/2020/deploy-custom-domain-github-pages-on-github-actions/</link><pubDate>Sun, 01 Mar 2020 22:24:43 +0900</pubDate><guid>https://tech-wafter.net/2020/deploy-custom-domain-github-pages-on-github-actions/</guid><description>GitHub-Actionsでデプロイを行うと、customドメインで設定したものが初期化されていました。 原因はGitHub-Actionsで利用しているactions-gh-pagesにて、cnameの設定を忘れていたためでした。 こちらに乗っている通り、with.cnameに自身のカスタムドメイン名を記入すれば正常にデプロイされるはずです。 1 2 3 4 5 6 - name:Deployuses:peaceiris/actions-gh-pages@v3with:github_token:${{secrets.GITHUB_TOKEN}}publish_dir:./publiccname:github.com</description></item><item><title>アフターデジタルを読んだ</title><link>https://tech-wafter.net/2020/read-after-digital/</link><pubDate>Wed, 26 Feb 2020 21:59:51 +0900</pubDate><guid>https://tech-wafter.net/2020/read-after-digital/</guid><description>はじめに アフターデジタルという本を読みました。 感想にも書いてますが、ITに関わるすべての人が読んで良いと思う一冊だったので、 本屋で見かけた際は手にとってみては？ 自分はKindleで読みましたが…ｗ 感想 アフターデジタル オフラインのない時代に生き残る著者 : 藤井保文日経BP発売日 : 2019-03-23ブクログでレビューを見る»IT技術者やIT技術に関わる人は手にとって良い一冊だと思います。 TL;DR この本を読むと ・中国で行われているOMOの考え方 ・個人データの重要性/使い方 ・個人データに対する考え方 ・日本でO</description></item><item><title>社内のLT大会に参加してみた（自分のテーマは[Gasを用いた確認作業の自動化]）</title><link>https://tech-wafter.net/2020/tried-lightningtalk-in-the-office/</link><pubDate>Tue, 25 Feb 2020 22:24:40 +0900</pubDate><guid>https://tech-wafter.net/2020/tried-lightningtalk-in-the-office/</guid><description>はじめに 1月21日に社内でLT大会があったので、参加してみました！ 誰かが企画したLT大会というものには参加したことがなかったため、非常に良い経験をしたと感じてます。こちらの記事はLTの体験談となります。 TL;DR LT発表は自分の成果を簡単に発表できる場 LTに自身がないマンは小さめのLTで発表するべし 他人から評価してもらうことでモチベがちょっと上がる いい区切りになる テーマについて 何個か候補はあったので、主催グループの一人にどれが良いか聞いて決めました。内容はタイトルにもある通りGoogleAppScrip</description></item><item><title>configの設定からHugoで表示するコードに番号を表示する</title><link>https://tech-wafter.net/2020/hugo-can-show-numberline-on-code-by-config/</link><pubDate>Tue, 18 Feb 2020 21:50:42 +0900</pubDate><guid>https://tech-wafter.net/2020/hugo-can-show-numberline-on-code-by-config/</guid><description>以前 昔（v0.60.0以前）はソースコードに行数を入れるには、以下のような記述が必要でした。 1 2 3 {{&amp;lt; highlight go &amp;#34;linenos=table,hl_lines=8 15-17,linenostart=199&amp;#34; &amp;gt;}} // ... code {{&amp;lt; / highlight &amp;gt;}} 今 今は以下のconfig（config.toml）を設定しておくことで、 バッククォート（`）だけのコードでも行数が付くようになってます。 1 2 3 4 5 6 7 8 9 10 11 [markup] [markup.highlight] codeFences = true guessSyntax = false hl_Lines = &amp;#34;&amp;#34; lineNoStart = 1 lineNos = false lineNumbersInTable = true noClasses = true style = &amp;#34;monokai&amp;#34; tabWidth = 4 意味を乗っけておくと、 Name Description codeFences syntaxHighlightを使うかの設定。 guessSyntax 書かれている言語を推測してハイライトするかの設定。 hl_Lines highLightする範囲の設定</description></item><item><title>Github-Actionsでhugoのデプロイを自動化してみた</title><link>https://tech-wafter.net/2020/build-hugo-homepage-by-github-action/</link><pubDate>Mon, 10 Feb 2020 12:46:44 +0900</pubDate><guid>https://tech-wafter.net/2020/build-hugo-homepage-by-github-action/</guid><description>はじめに 結構前からGitHub-Actionsを使ってみたいなと思っていましたが、題材がなく困ってました。 そこで、「なにか定期的にデプロイしてるやつってあったっけ」と考えたところ 「そういやhugoのデプロイって自動化できるんじゃね？」という考えに行き着き、実際にやってみた感じです。 TL;DR この記事はhugo用リポジトリとhomepage用リポジトリで分割している場合の説明です GitHub-Actionsを利用してデプロイすることは可能 hugo用のactionがすでに存在するので、そちらを利用すると良い</description></item><item><title>Hugoで一度publishしてしまったファイルをデプロイ時に消す</title><link>https://tech-wafter.net/2020/how-to-clear-old-publish-files/</link><pubDate>Tue, 04 Feb 2020 02:40:26 +0900</pubDate><guid>https://tech-wafter.net/2020/how-to-clear-old-publish-files/</guid><description>はじめに hugoでデプロイする際に、よくミスって不要記事をpublishしてしまうことがあります。 その後再度公開を行うと、出力元のフォルダからは消えているのにもかかわらず残り続けます。 今回はそれの解決を行いました。 （今まではpublic以下をスクリプトで消してた…） TL;DR hugo --cleanDestinationDirでおｋ How to ほぼほぼTL;DRで終わっちゃってますが、個人的にTL;DRがある記事のほうが手っ取り早く答えを見つけられると思っているので記載してます。 ググってもあんまり情報がなかったので、こ</description></item><item><title>しょぼい記事の投稿でも、何もしないよりは良いと思う今日このごろ</title><link>https://tech-wafter.net/2020/subtle-post-is-better-than-nothing/</link><pubDate>Mon, 03 Feb 2020 22:00:00 +0900</pubDate><guid>https://tech-wafter.net/2020/subtle-post-is-better-than-nothing/</guid><description>はじめに ここ一ヶ月、何も更新できていませんでした。 ネタはあったのですが、明日書けばいいや病にかかってしまい結局何もできていなかったという感じです。今回の問題をちょっと自分なりに振り返ってみようと思いました。 TL;DR 環境を変えよう♻️ 記事の量は自分に合わせよう📄 業務は程々に、僅かな時間をみつけて勉強時間をこしらえる🏃‍♂️ 原因 「さぁ書こう」という環境に身を置かなかった 自分は基本的に家にいると、一日中動画かゲームをしてしまいします🎮 勉強とか読書とかは、なんかめちゃくちゃやりたいという周期がありまして、その</description></item><item><title>PowerShellの色を変えようと思ってたら、Windows Terminal(Preview)で変更してた</title><link>https://tech-wafter.net/2019/tried-to-change-powershell-color/</link><pubDate>Mon, 02 Dec 2019 13:21:43 +0900</pubDate><guid>https://tech-wafter.net/2019/tried-to-change-powershell-color/</guid><description>TL;DR Color Toolでもできるっぽいが、今後はWindows Terminalを使う Settingsのprofilesに設定を記述すると適応される 詳細はここを確認すること はじめに プライベートではMacBook Proを使用しているのですが、会社ではThinkPadのWindowsPCを開発PCとして利用しています。 ちょっとした作業をする際には、WSLを利用して行うようにしているのですが、どうしてもPowerShellで処理を走らせないと駄目な場面がでてきます。そこでようやくPowerShellを開くのですが</description></item><item><title>バージョンの付け方を調べてみた</title><link>https://tech-wafter.net/2019/what-kind-of-management-version/</link><pubDate>Mon, 25 Nov 2019 21:20:19 +0900</pubDate><guid>https://tech-wafter.net/2019/what-kind-of-management-version/</guid><description>はじめに 今日、別部門の先輩から 「お前のところのプロジェクトはどんな感じでバージョンの番号つけてる？」 と聞かれたので、 「年月日で付けてます。」 と返したのですが、世間ではどういった感じで付けてるかをしっかりと意識してみたことはないと思い、調べてみました。 さまざまな命名方法 いくつか、慣習で決められているものもあるようです。 丸投げになってしまいますが、めちゃくちゃまとめられた記事を見つけたのでこちらを見るとわかりやすいです。 バージョンにあれこれ考えを巡らせてみる 各ソフトウェアのバージョン定義 自分が思いつ</description></item><item><title>使ってよかったVSCode拡張機能14選+3選の紹介</title><link>https://tech-wafter.net/2019/good-extentions/</link><pubDate>Thu, 14 Nov 2019 00:42:17 +0900</pubDate><guid>https://tech-wafter.net/2019/good-extentions/</guid><description>一軍 この枠で紹介している拡張機能は、高い汎用性を持っており私自身も良く使っている拡張機能たちです。 Settings Sync♻️ VS Codeの拡張機能を移行する場合や、バックアップするときに大活躍！ とりあえず入れとけスタイルでオッケーな拡張機能。 かったるい移行作業をめちゃくちゃ楽にしてくれる。端末が壊れても安心だし、真っ先に入れても良い拡張機能かも。自分で管理しても良いけどね。 Download Page テキスト校正くん👨‍🎓 VS Code上にあるテキストを自動で添削してくれるスグレモノ。 どこかに議事録やまとめた文章を提出する前に少し確認す</description></item><item><title>Hugoで記事が一年以上過ぎた場合はnoticeを表示するようにした</title><link>https://tech-wafter.net/2019/show-notification-if-now-greater-equal-updated-time/</link><pubDate>Tue, 12 Nov 2019 21:36:21 +0900</pubDate><guid>https://tech-wafter.net/2019/show-notification-if-now-greater-equal-updated-time/</guid><description>TL;DR 以下の書き方で実装可（⚠️Bulmaでの実装） 1 2 3 4 5 6 {{$year:=(div(subnow.Unix.Lastmod.Unix)31536000)}} {{ifle1$year}} &amp;lt;div class=&amp;#34;notification is-warning&amp;#34;&amp;gt; この記事は、掲載されてから {{$year}} 年間修正されておりません。 &amp;lt;/div&amp;gt; {{end}} Hugo公式の.Unixページを見よ はじめに 唐突に、「記事が老朽化している表示」はほしいなと思い、色々と検索して実装ができた感じです。Goのテンプレートエンジンにだけ詳しくなっていく… 方法 一番上に書いてあるとおり、 1 2 3 4 5 6 7 &amp;lt;!-- 再掲 --&amp;gt; {{$year:=(div(subnow.Unix.Lastmod.Unix)31536000)}} {{ifle1$year}} &amp;lt;div class=&amp;#34;notification is-warning&amp;#34;&amp;gt; この記事は、掲載されてから {{$year}} 年間修正されておりません。 &amp;lt;/div&amp;gt; {{end}} で実装できる。 実際の表示はこんな感じ😗 多分上記のコードを読んだらわか</description></item><item><title>Three.jsを学習する【第一回】</title><link>https://tech-wafter.net/2019/study-three.js-1/</link><pubDate>Sat, 09 Nov 2019 17:35:48 +0900</pubDate><guid>https://tech-wafter.net/2019/study-three.js-1/</guid><description>前回のブラウザでARを使ってみたを触って、オブジェクトをThree.jsで作りたいと思いました。 Three.jsを学習するにあたって、良さげなサイトがあったので、こちらを参考に学習していこうと思います。忘備録です。 functionをアロー関数に変える なんでアロー関数にしたいのかは、関数宣言 vs 関数式 | ES2015+を参照。 1 2 3 4 5 window.addEventListener(&amp;#39;load&amp;#39;, init); function init() { // 処理 } から 1 2 3 4 const init = () =&amp;gt; { // 処理 } window.addEventListener(&amp;#39;load&amp;#39;, init); に変える。 Three.jsでオブジェクトを表示させるには レンダラーを作成する シーンを作成する 意味 レンダラー 描画する</description></item><item><title>git-secretsのawsトークン保護を検証してみた</title><link>https://tech-wafter.net/2019/tried-using-git-secrets/</link><pubDate>Thu, 07 Nov 2019 22:16:44 +0900</pubDate><guid>https://tech-wafter.net/2019/tried-using-git-secrets/</guid><description>はじめに 昨日、日課のはてなブックマークを漁っていたところ、Developers.IOさんの AWSでのセキュリティ対策全部盛り[初級から中級まで]というスライドを見つけました。 こちらのスライドの中で、git-secretsというAWSなどのtoken情報をgitに乗せてしまうのを防ぐソフトが紹介されており、以下のパターンの場合に正しく検知できるのかが気になったため検証しました。 既にtokenがコミットされていた場合 どのように検知するのか？ 既にtokenが混入してるコミットをプッシュした際には検</description></item><item><title>マルチAZとクロスリージョンレプリケーションの違い</title><link>https://tech-wafter.net/2019/difference-between-multiaz-and-cross-region/</link><pubDate>Wed, 06 Nov 2019 22:21:12 +0900</pubDate><guid>https://tech-wafter.net/2019/difference-between-multiaz-and-cross-region/</guid><description>つい最近、表題について調べることが合ったため、忘備録として記載しておきます。 違いについて 結論から書くと、 クロスリージョンレプリカはサブがリードレプリカなのに対して、マルチAZではスタンバイレプリカになっている クロスリージョンレプリカは複数リージョンを利用するのに対し、マルチAZでは同一リージョンを利用する が大きな違いかなと思います。 MultiAZ構成について RDSをマルチAZ構成で起動するとMasterとは別のAZにSlaveのRDSが立ち上げられ、同期レプリケーションが行われます。俗に言うMa</description></item><item><title>ブラウザでARを使ってみた</title><link>https://tech-wafter.net/2019/try-to-create-ar-page/</link><pubDate>Mon, 04 Nov 2019 13:47:45 +0900</pubDate><guid>https://tech-wafter.net/2019/try-to-create-ar-page/</guid><description>はじめに ふと、名刺にARマーカーが記載されていて、 川島教授の顔みたいな（脳トレ）のが出てきたら、とてもおもしろいなと思いついて触ってみました。 もっと脳を鍛える大人のDSトレーニング™ （余談ですが、脳トレのSwitch版がでるみたいです） ARの実現方法 軽く検索したところ、Unityで実現する方法とWeb技術で実現する方法が見つかりました。 ネイティブで実現する方法もあると思いますが、今回はこの2つを見ていきます。 Unity どうやら、Vuforiaという外部ツールと連携して使うのが主流みたいです。 iOSだとA</description></item><item><title>Marpが前よりも使いやすくなっていたので、触ってみた</title><link>https://tech-wafter.net/2019/updated-marp/</link><pubDate>Thu, 31 Oct 2019 22:41:35 +0900</pubDate><guid>https://tech-wafter.net/2019/updated-marp/</guid><description>はじめに ずっと前から、スライドを何とかMarkdownでかけないかをずっと考えていまして、昔はMarpを使っていました。 しかし、かゆいところに手が届かないのが欠点で、ここ最近はrevealjsというライブラリのVSCode拡張機能版cscode-revealを利用しておりました。 こちらもめちゃくちゃ良くて、htmlでイカしたスライドを作りたいなら、めちゃくちゃありな選択肢だと思います。 ずっとcscode-revealを利用していたのですが、こちらはpdf化を行うときがうまく行かず、pptxやpd</description></item><item><title>Amazon Game Tech Night Osakaに行ってみた</title><link>https://tech-wafter.net/2019/game-tech-night-cloud2.0/</link><pubDate>Thu, 31 Oct 2019 02:19:44 +0900</pubDate><guid>https://tech-wafter.net/2019/game-tech-night-cloud2.0/</guid><description>畑違いの業種なのですが、 AWS Pop-Up Loft Osakaが行われるとのことだったので、Game Tech Nightへ参加しました！ 会場は最初から最後まで、飲食ありのラフな感じで開催されておりました😊 登壇者は全員おもしろい発表をされていましたが、とくに面白かったCloud2.0についての所感を記載しております。 もうそこまで迫っている！ Cloud2.0時代の開発 info 登壇者 丹羽さん/GS2のCEO HP https://gs2.io/ フルマネージドサービスを使おう 処理をフルマネージドにすることで、復旧対策や管理までAWSが担保してくれる あえてロックインされにい</description></item><item><title>iCloudのディレクトリをホームディレクトリに持ってくる方法</title><link>https://tech-wafter.net/2019/how-to-display-icloud-doc-on-home/</link><pubDate>Tue, 29 Oct 2019 05:47:19 +0900</pubDate><guid>https://tech-wafter.net/2019/how-to-display-icloud-doc-on-home/</guid><description>クラウドストレージを比較している途中で、 iCloudをhomeディレクトリに移す(シンボリックリンクを貼る)作業が少し手間だったので、メモとして載せてます。 ターミナルからアクセスしづらい問題 ターミナル上からiCloud Driveのファイルへアクセスしようとするには、 1 Users/[userName]/Library/Mobile\ Documents/com~apple~CloudDocs にまでアクセスしなければならないです。 一応シンボリックリンクは貼れますが、これも少し曲者でリンク元の方にスペース が入っているため、クォーテーションでくくってあげないとだめです(自分は気づかずに10分ぐらい悩んだ)。 1 ln -s &amp;#34;/Users/$USER/Library/Mobile Documents/com~apple~CloudDocs&amp;#34; iCloud 参</description></item><item><title>CloudStrageのBoxを使ってみた</title><link>https://tech-wafter.net/2019/tried-to-use-box/</link><pubDate>Sun, 27 Oct 2019 18:28:29 +0900</pubDate><guid>https://tech-wafter.net/2019/tried-to-use-box/</guid><description>最近MacBookProを買ったこともあり、ローカルの環境を見直しておりました。 その際にバックアップ用のクラウドストレージを再検討してみたところ、Boxが良さげだったので使ってみた話です。 TL;DR 無料でクラウドストレージを利用する場合の検討です ファイルの特徴で併用していくのが良さげ 無難に行くならDropBox、容量がほしいならBox 同期時間を気にしないならOneDrive Apple製品統一ならiCloud Driveでもいいかも 以前はDropBoxを利用していた Dropboxはローカルで同期させる際も普</description></item><item><title>hugoの.GitInfoが適応された話(理由は不明です…)</title><link>https://tech-wafter.net/2019/adapted-hugo-gitinfo/</link><pubDate>Sun, 20 Oct 2019 12:47:18 +0900</pubDate><guid>https://tech-wafter.net/2019/adapted-hugo-gitinfo/</guid><description>ずっと前から、記事の更新はgitのコミット履歴を使いたいと思っていたのですが、 .GitInfoの情報が記事にうまく反映されずnilになっていたため、手動で作業してました😇 .GitInfoが使えるようになった原因は恐らく、記事のパスを /content/post/[記事].md→/content/post/[分類用フォルダ]/[記事].md ※[]内はそれぞれの用途で変更する としたことです。 何故これで.GitInfoが適応されたのかは不明ですが、とにかくずっとやりたかったことなので、大満足😭</description></item><item><title>新卒と２人でhtml5を勉強した話👨‍👦</title><link>https://tech-wafter.net/2019/study-html5-with-new-employee/</link><pubDate>Thu, 17 Oct 2019 03:07:18 +0900</pubDate><guid>https://tech-wafter.net/2019/study-html5-with-new-employee/</guid><description>TL;DR 何かをやらせるときは極力その子がやりたいことに沿って学習させる ちゃんと意見を聞けていたら、その子からアクションを起こしてくれる 相手が自由にできるように幅をもたせておくことは大切 コミュニケーションを取る 相手のレベルを考える 自分も知識が広がるようなものを取り組むと👍 概要 9月頃から、上司から 「新卒の面倒を見てやってほしい」 「案件で使う技術を使えるようにしてほしい」 と唐突に言われ、 WTFと心で思いつつ学習プランを新卒と練り、１ヶ月半過ごしました。 新卒は経済学部出身なので、ちょろっと研修(2ヶ月)+OJ</description></item><item><title>Material-uiのmakestyleにて、複数のクラスを動的に指定する方法</title><link>https://tech-wafter.net/2019/how-to-select-multipulclass-material-ui/</link><pubDate>Mon, 14 Oct 2019 15:28:36 +0900</pubDate><guid>https://tech-wafter.net/2019/how-to-select-multipulclass-material-ui/</guid><description>TL;DR classデータをstring配列として持つ 配列.join(' ')を該当のclassName={}の中に記述する 概要 最近、Reactについての勉強を行っていたところ、classの指定に手間取ってしまったのでメモ。 方法としては、探したところ、以下2つがあるみたい。 class名の配列を作成して、最後にjoinで配列の間に を入れて出力 classNameの中で、２つのclass名を呼び出す。 汎用性があるのは方法1のほうだと思われます。 面倒くさいのでソースベタ貼りしてます。 BoxはMaterial-ui</description></item><item><title>Windows10のVSCodeでvscode Revealが正しく動かなかった問題の解決法</title><link>https://tech-wafter.net/2019/fixed-revealjs-vscode-extention-on-windows10/</link><pubDate>Thu, 18 Jul 2019 05:18:30 +0900</pubDate><guid>https://tech-wafter.net/2019/fixed-revealjs-vscode-extention-on-windows10/</guid><description>TL;DR 方法1 改行コードをLFに変える 方法2 拡張機能でLFで書かれている部分をCRLFで書き直す 原因 TL;DRでだいたい判ると思いますが、vscode-revealのスライド仕切りの---がデフォではLFの設定で登録されているのが問題でした。 revealjsの改行コード指摘ページ 日本語訳版 解決法 普通に使う場合は前者の方を実施したほうがいいと思います。 後者のやり方だと設定ファイルに書かない限り、正しく表示させる作業が毎日必要になります。 revealjsに読み込ませる改行コードを変える場合 拡張機能の設定画</description></item><item><title>Route53のルーティング問題を解決した話</title><link>https://tech-wafter.net/2019/resolved-routing-problem-on-route53/</link><pubDate>Mon, 15 Jul 2019 18:58:56 +0900</pubDate><guid>https://tech-wafter.net/2019/resolved-routing-problem-on-route53/</guid><description>TL;DR 外部からホストゾーンのネームサーバを指定してあげないと、レコードが帰ってこなかった Route53のドメインのネームサーバとホストゾーンのネームサーバを一緒にする 概要 前に[Route53] -&amp;gt; [S3のリダイレクト] -&amp;gt; [リダイレクト先ページ] のルーティングを行おうと思いましたがうまく行きませんでした。 該当記事 原因 Route53にて、登録していたドメインに記述されているネームサーバの一覧と ホストゾーンに記載されているNSレコードの値が違っていたため、 正しくルーティングされなかったみたいです。 解決方法と</description></item><item><title>Onsen-UIのDialogコンポーネントサイズを変更する</title><link>https://tech-wafter.net/2019/change-onsen-ui-dialog-component-size/</link><pubDate>Thu, 04 Jul 2019 03:01:22 +0900</pubDate><guid>https://tech-wafter.net/2019/change-onsen-ui-dialog-component-size/</guid><description>TL;DR Onsen-UI読み込み後に出力されるDialogをコピーして手動で使う Dialog群の形だけ取得しているので、Show, Hide共にこちら側で呼ぶ必要あり Onsen-UIのタグオブジェクトから、Onsen-UI側で用意されているshow(), hide()などが呼び出せる これを使って自分で制御を行う 概要 以下の画像のような、アラートのサイズを変更したいのにできない。 Onsen-UIの公式リファレンスを見てもDialogの項目にそれっぽい動作をしてくれるDialogはない。。 解決方法🤗 ons.no</description></item><item><title>S3のリダイレクト機能でgithubのpageへ飛ばしたい</title><link>https://tech-wafter.net/2019/want-to-use-s3-redirect/</link><pubDate>Tue, 02 Jul 2019 23:33:13 +0000</pubDate><guid>https://tech-wafter.net/2019/want-to-use-s3-redirect/</guid><description>表題の通りです。 完成してないです。 前に取得した.netのドメインを踏んだときにS3のリダイレクト機能を使ってこのページに飛べるようにしようと思い設定してました。 出来たこと s3のエンドポイント(httpのリンク)にアクセスするとgithubPageにリダイレクトする s3のエイリアスを作成する 出来てないところ .netドメインにアクセスしてもs3のリダイレクト用エンドポイントにまでたどり着かない not foundエラーが発生する Route53での設定が正しく行えていないと予想</description></item><item><title>UbuntuのClibor的存在CopyQ</title><link>https://tech-wafter.net/2019/copyq-like-clibor-can-use-on-ubuntu/</link><pubDate>Sun, 30 Jun 2019 23:38:31 +0900</pubDate><guid>https://tech-wafter.net/2019/copyq-like-clibor-can-use-on-ubuntu/</guid><description>概要 普段WindowsではClipBoardの履歴にcliborを使っています。 最近OSをubuntuで利用することがあり、ubuntuでコピー履歴管理を探していたところ、 Windows/MacOS/Linux対応のCopyQってのが見つかりました。 さわってみて Cliborみたいに、ショートカットにAlt*2とかの設定はできませんでしたが、 無変換に割り当てられたので概ね満足。 CopyQには、履歴管理以外にも機能があるみたいですが、 とりあえずやりたいことができたのでOK。 参考 https://qualiartz.jp/digitaltransformation/automation/recommend-oss-copyq-clipboard-manager/ https://www.tecmint.com/best-clipboard-managers-for-linux/</description></item><item><title>IntelliJでwebpack導入後、フォルダが見えなくなる問題の解決法</title><link>https://tech-wafter.net/2019/why-did-webpack-hide-outputfile-on-intellij/</link><pubDate>Sun, 30 Jun 2019 20:08:06 +0900</pubDate><guid>https://tech-wafter.net/2019/why-did-webpack-hide-outputfile-on-intellij/</guid><description>TL;DR 設定からWebpackを開いて、configuration fileのパスを消す 原因 IntelliJが賢すぎた。 というのも、webpackのアウトプット先がintelliJ IDEA上でExcluded(非表示になりIntellij上から閲覧できなくなる)のは、 webpackの出力先フォルダだからです。 設定は以下の場所にあり、 Preferences | Languages &amp;amp; Frameworks | JavaScript | Webpackwebpack のconfiguration file:の項目を空文字列にすることによってIntelliJ上から編集できるようになります。 消している理由は パフォーマンスのため</description></item><item><title>Light Sailからの移行</title><link>https://tech-wafter.net/2019/migration-from-lightsail/</link><pubDate>Tue, 16 Apr 2019 04:52:33 +0900</pubDate><guid>https://tech-wafter.net/2019/migration-from-lightsail/</guid><description>移行しました AWSのLight Sail + WordPressでやってましたが、 WordPressがだるすぎたので AWSの~~[AWS Amplify + Hugo]に移行しました。~~ 現在は[github pages + Hugo] github pages とかをそのまま使うのも良かったけど、 AWSのサービスを触ってみたかったのでこっちで立ててみました。 Hugoに移って最初に記事書いていて思うけど、 やっぱMarkdownが最強なんだわ。 スラスラ書ける😎 一応WordPressでもMarkdownで書けるプラグイン📕は少し出てたけど、 めっちゃこれいいやん、みたいなプラ</description></item><item><title>RaspberryPi 3 Model Bで遊ぶ</title><link>https://tech-wafter.net/2017/create-live-camera-by-raspberrypi-model-b/</link><pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate><guid>https://tech-wafter.net/2017/create-live-camera-by-raspberrypi-model-b/</guid><description>旧サイトの記事を移行してきたものとなります。 今日のご飯が何かを確認したいためのラズパイカメラ作成を行います この前RaspberryPi 3 Model Bを買ってそこら辺に転がってたUSBカメラと繋げて台所に出て来るご飯をブラウザ上から見られるようにしたのでその時の経緯を記載。 NOOBSを使ってRaspbianを入れる お前初心者かよｗｗと煽っているわけではないです。 NOOBSとは、ラズパイ用に作られたDebianベースのOSであるRaspbianとかを簡単にインストールできるようにしたインストーラーです。 NO</description></item><item><title>MacOSを入れ直したらbrew upgradeでエラーが出るようになった</title><link>https://tech-wafter.net/2016/fixed-homebrew-error-that-reinstall-macos/</link><pubDate>Mon, 31 Oct 2016 00:00:00 +0000</pubDate><guid>https://tech-wafter.net/2016/fixed-homebrew-error-that-reinstall-macos/</guid><description>旧サイトの記事を移行してきたものとなります。 1 2 3 ==&amp;gt; Using the sandbox Error: /usr/local/opt/jpeg not present or broken Please reinstall jpeg. Sorry :( why!?? 結構悩みましたが、以下のコマンドで直りました。 1 brew unlink jpeg &amp;amp;&amp;amp; brew link jpeg こういう系の問題って目的の記事とかが見つかれば一瞬なんですけど、 見つかるまで永遠に解決しないので本当に辛い・・・。 参考:Library not loaded: /usr/local/opt/jpeg/lib/libjpeg.8.dylib #323</description></item><item><title>カスペルスキーのプロセス「kav」がくっそ重くてターミナル起動が8秒ぐらいかかる問題</title><link>https://tech-wafter.net/2016/very-slow-kav-on-terminal/</link><pubDate>Fri, 19 Aug 2016 00:00:00 +0000</pubDate><guid>https://tech-wafter.net/2016/very-slow-kav-on-terminal/</guid><description>旧サイトの記事を移行してきたものとなります。 TL;DR サポセンに連絡しましたが、現在調査中で 2015年版を利用すればなんとかなるかもとのこと。 2019年現在は直っている可能性があります（未検証）。 概要 Kaspersky for Macが入っているPCにrbenvを入れると、ターミナルの動作がめちゃくちゃ重たくなります。 起動に8sもかかると、使い物にならないので カスペルスキーのサポセンにぶん投げてました。 rbenvの測定を行ったのが、以下の画像です。 回答 2015年版を使えば直るかもしれないので、そっちを使ってくださいとのこと。 自</description></item><item><title>Eclipseのタブを可視化するための > を消したい</title><link>https://tech-wafter.net/2016/want-to-delete-tab-marker/</link><pubDate>Fri, 15 Apr 2016 00:00:00 +0000</pubDate><guid>https://tech-wafter.net/2016/want-to-delete-tab-marker/</guid><description>旧サイトの記事を移行してきたものとなります。 Eclipseのタブを可視化した際に表示される、``を消したかった。 これがあると個人的には見づらいです。 Eclipseの改行、タブ文字非表示 こちらに解決法がありました。 JStyleってのを弄れば良かったらしいです。</description></item></channel></rss>